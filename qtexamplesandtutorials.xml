<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Examples And Tutorials</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A list of Qt examples and tutorials.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>A collection of code samples and tutorials are provided with Qt to help new users get started with Qt development. These documents cover a range of topics, from basic use of widgets to step-by-step tutorials that show how an application is put together.</db:para>
<db:para>The examples are part of the Qt packages. Visit the <db:link xlink:href="http://qt.io/download">Downloads</db:link> page for more information.</db:para>
<db:section xml:id="running-the-examples">
<db:title>Running the Examples</db:title>
<db:para>Open and run examples within Qt Creator's <db:emphasis role="bold">Welcome</db:emphasis> mode. Most of the examples run on various platforms and to search for platform-specific examples, type the platform name (or any keywords) in the search field. For example, typing Android in the search field lists the examples that are fully compatible with Android.</db:para>
<db:para>For more information about running examples in Qt Creator, visit the <db:link xlink:href="https://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link> page.</db:para>
</db:section>
<db:section xml:id="application-examples">
<db:title>Application Examples</db:title>
<db:variablelist role="category Application Examples">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-calqlatr-example.xml" xlink:role="page">Calqlatr</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick app designed for portrait devices that uses custom components, animated with AnimationController, and JavaScript for the application logic.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-coffee-example.xml" xlink:role="page">Coffee Machine</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application with a state-based custom user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-dice-example.xml" xlink:role="page">Dice</db:link></db:term>
<db:listitem>
<db:para>A dice throwing application that demonstrates using Qt Quick 3D Physics and Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-documentviewer-example.xml" xlink:role="page">Document Viewer</db:link></db:term>
<db:listitem>
<db:para>A Widgets application to display and print JSON, text, and PDF files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-fx-material-showroom-example.xml" xlink:role="page">FX &amp; Material Showroom</db:link></db:term>
<db:listitem>
<db:para>Demonstrates material and effects capabilities of Qt Quick 3D. This example demonstrates how you can use particle effects and materials in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-filesystemexplorer-example.xml" xlink:role="page">File System Explorer</db:link></db:term>
<db:listitem>
<db:para>A desktop QML app utilizing customized Qt Quick Controls to display text files from a filesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-tutorials-alarms-example.xml" xlink:role="page">Getting Started Programming with Qt Quick</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Quick based on an alarms application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-mediaplayer-example.xml" xlink:role="page">Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-photosurface-example.xml" xlink:role="page">Photo Surface</db:link></db:term>
<db:listitem>
<db:para>A QML app for touch devices that uses a Repeater with a FolderListModel to access content in a folder, and a PinchHandler to handle pinch gestures on the fetched content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-colorpaletteclient-example.xml" xlink:role="page">Qt Quick Demo - RESTful API client</db:link></db:term>
<db:listitem>
<db:para>Example of how to create a RESTful API QML client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-robotarm-example.xml" xlink:role="page">Robot Arm Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to add a C++ backend to a 3D project from Qt Design Studio. This example demonstrates adding a C++ backend to a 3D project created in Qt Design Studio. The example itself consists of an interactive industrial robot arm in a Qt Quick 3D scene. The 2D UI to control the robot arm is implement using Qt Quick Controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-samegame-example.xml" xlink:role="page">Same Game</db:link></db:term>
<db:listitem>
<db:para>A QML implementation of the popular puzzle game by Kuniaki Moribe.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-thermostat-example.xml" xlink:role="page">Thermostat</db:link></db:term>
<db:listitem>
<db:para>A user interface for a home thermostat, implemented in Qt Quick. It demonstrates how to create responsive applications that scale from large desktop displays to mobile and small embedded displays.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-todolist-example.xml" xlink:role="page">To Do List Example</db:link></db:term>
<db:listitem>
<db:para>A QML implementation of to do list application that demonstrates how to create application thats looks native on any platform.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="desktop">
<db:title>Desktop</db:title>
<db:variablelist role="category Desktop">
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-comapp-example.xml" xlink:role="page">COM App Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The COM App example shows how to use ActiveQt to develop a Qt application that can be automated via COM. Different QObject based classes are exposed as COM objects that communicate with the GUI of the running Qt application. The APIs of those COM objects has been designed to resemble the APIs of standard COM applications; i.e. those from Microsoft Office.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-mediaplayer-example.xml" xlink:role="page">Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-qutlook-example.xml" xlink:role="page">Qutlook Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Qutlook example demonstrates the use of ActiveQt to automate Outlook. The example makes use of the dumpcpp tool to generate a C++ namespace for the type library describing the Outlook Object Model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-simple-example.xml" xlink:role="page">Simple Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Simple example demonstrates the use of QAxBindable and QAxFactory.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-systray-example.xml" xlink:role="page">System Tray Icon Example</db:link></db:term>
<db:listitem>
<db:para>The System Tray Icon example shows how to add an icon with a menu and popup messages to a desktop environment's system tray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-screenshot-example.xml" xlink:role="page">Taking a Screenshot</db:link></db:term>
<db:listitem>
<db:para>The Screenshot example shows how to take a screenshot of the desktop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-wrapper-example.xml" xlink:role="page">Wrapper Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Wrapper example demonstrates how to export existing QWidget classes as ActiveX controls, and the use of QAxFactory together with the QAXFACTORY_EXPORT() macro. ActiveX controls in this example are the standard button classes QPushButton, QCheckBox and QRadioButton as provided by Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="mobile">
<db:title>Mobile</db:title>
<db:variablelist role="category Mobile">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-calqlatr-example.xml" xlink:role="page">Calqlatr</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick app designed for portrait devices that uses custom components, animated with AnimationController, and JavaScript for the application logic.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmlchartsgallery-example.xml" xlink:role="page">Charts with QML Gallery</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the different chart types by using qml.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-coffee-example.xml" xlink:role="page">Coffee Machine</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application with a state-based custom user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogles3-example.xml" xlink:role="page">Hello GLES3 Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates OpenGL ES 3.0 functions via QOpenGLExtraFunctions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-platform-androidnotifier-example.xml" xlink:role="page">Qt Android Notifier</db:link></db:term>
<db:listitem>
<db:para>Demonstrates calling Java code from Qt in an Android application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-contactlist-example.xml" xlink:role="page">Qt Quick Controls - Contact List</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class that implements a simple contact list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-gallery-example.xml" xlink:role="page">Qt Quick Controls - Gallery</db:link></db:term>
<db:listitem>
<db:para>A gallery of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-wearable-example.xml" xlink:role="page">Qt Quick Controls - Wearable Demo</db:link></db:term>
<db:listitem>
<db:para>Demonstrates an application launcher designed for wearable devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-openglunderqml-example.xml" xlink:role="page">Scene Graph - OpenGL Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render OpenGL under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="embedded">
<db:title>Embedded</db:title>
<db:variablelist role="category Embedded">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-coffee-example.xml" xlink:role="page">Coffee Machine</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application with a state-based custom user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-wearable-example.xml" xlink:role="page">Qt Quick Controls - Wearable Demo</db:link></db:term>
<db:listitem>
<db:para>Demonstrates an application launcher designed for wearable devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-thermostat-example.xml" xlink:role="page">Thermostat</db:link></db:term>
<db:listitem>
<db:para>A user interface for a home thermostat, implemented in Qt Quick. It demonstrates how to create responsive applications that scale from large desktop displays to mobile and small embedded displays.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="graphics">
<db:title>Graphics</db:title>
<db:variablelist role="category Graphics">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-clocks-example.xml" xlink:role="page">Qt Quick Demo - Clocks</db:link></db:term>
<db:listitem>
<db:para>A QML clock application that demonstrates using a ListView type to display data generated by a ListModel and a SpringAnimation type to animate images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-documentviewer-plugins-txtviewer-example.xml" xlink:role="page">Qt Widgets - Text Viewer Plugin Example</db:link></db:term>
<db:listitem>
<db:para>A widget example with menus, toolbars and a status bar.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="multimedia">
<db:title>Multimedia</db:title>
<db:variablelist role="category Multimedia">
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiodevices-example.xml" xlink:role="page">Audio Devices Example</db:link></db:term>
<db:listitem>
<db:para>Testing the available audio devices and their configuration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiooutput-example.xml" xlink:role="page">Audio Output Example</db:link></db:term>
<db:listitem>
<db:para>Enabling audio playback using the QAudioSink class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiorecorder-example.xml" xlink:role="page">Audio Recorder Example</db:link></db:term>
<db:listitem>
<db:para>Discovering the available devices and supported codecs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiosource-example.xml" xlink:role="page">Audio Source Example</db:link></db:term>
<db:listitem>
<db:para>Recording audio using the QAudioSource class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-camera-example.xml" xlink:role="page">Camera Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to capture a still image or record video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-player-example.xml" xlink:role="page">Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-declarative-camera-example.xml" xlink:role="page">QML Camera Application</db:link></db:term>
<db:listitem>
<db:para>This Qt Quick based application shows how to use the API to capture a still image or video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-mediaplayer-example.xml" xlink:role="page">QML Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-qmlvideo-example.xml" xlink:role="page">QML Video Example</db:link></db:term>
<db:listitem>
<db:para>Transforming video and camera viewfinder content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-recorder-example.xml" xlink:role="page">QML Video Recorder</db:link></db:term>
<db:listitem>
<db:para>Recording audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-screencapture-example.xml" xlink:role="page">Screen Capture Example</db:link></db:term>
<db:listitem>
<db:para>Capturing a screen or window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtspatialaudio-audiopanning-example.xml" xlink:role="page">Spatial Audio Panning Example</db:link></db:term>
<db:listitem>
<db:para>Shows some of the capabilities of the spatial audio engine in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-spectrum-example.xml" xlink:role="page">Spectrum Example</db:link></db:term>
<db:listitem>
<db:para>Analyzing a raw audio stream using the FFTReal library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-videographicsitem-example.xml" xlink:role="page">Video Graphics Item Example</db:link></db:term>
<db:listitem>
<db:para>Streaming video on a graphics scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-videowidget-example.xml" xlink:role="page">Video Widget Example</db:link></db:term>
<db:listitem>
<db:para>Implementing a video player widget.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="data-visualization-3d">
<db:title>Data Visualization &amp; 3D</db:title>
<db:variablelist role="category Data Visualization &amp; 3D">
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-audio-example.xml" xlink:role="page">Audio Samples vs Sound Level</db:link></db:term>
<db:listitem>
<db:para>This example shows the drawing of microphone samples vs audio level.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmlchartsgallery-example.xml" xlink:role="page">Charts with QML Gallery</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the different chart types by using qml.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-chartsgallery-example.xml" xlink:role="page">Charts with Widgets Gallery</db:link></db:term>
<db:listitem>
<db:para>An application that demonstrates the Qt Charts Widgets API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-cube-example.xml" xlink:role="page">Cube OpenGL ES 2.0 example</db:link></db:term>
<db:listitem>
<db:para>Shows how to manually rotate a textured 3D cube with user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-fx-material-showroom-example.xml" xlink:role="page">FX &amp; Material Showroom</db:link></db:term>
<db:listitem>
<db:para>Demonstrates material and effects capabilities of Qt Quick 3D. This example demonstrates how you can use particle effects and materials in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogl2-example.xml" xlink:role="page">Hello GL2 Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GL2 example demonstrates the basic use of the OpenGL-related classes provided with Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-openglseries-example.xml" xlink:role="page">OpenGL Accelerated Series Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to enable OpenGL acceleration for QLineSeries and QScatterSeries.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmloscilloscope-example.xml" xlink:role="page">Qml Oscilloscope</db:link></db:term>
<db:listitem>
<db:para>The example shows how to implement application with strict performance requirements using the Qt Charts QML API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmlweather-example.xml" xlink:role="page">Qml Weather</db:link></db:term>
<db:listitem>
<db:para>This is a basic demonstration showing how to use the different chart types by using qml.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-basicshapes-cpp-example.xml" xlink:role="page">Qt 3D: Basic Shapes C++ Example</db:link></db:term>
<db:listitem>
<db:para>Shows four basic shapes that Qt 3D offers and sets up a mesh for each of them.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-multiviewport-example.xml" xlink:role="page">Qt 3D: Multi Viewport QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML example that demonstrates rendering a Scenegraph from multiple viewports.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-pbr-materials-example.xml" xlink:role="page">Qt 3D: PBR Materials QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML application that demonstrates using PBR materials.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simple-cpp-example.xml" xlink:role="page">Qt 3D: Simple C++ Example</db:link></db:term>
<db:listitem>
<db:para>A C++ application that demonstrates how to render a scene in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simplecustommaterial-example.xml" xlink:role="page">Qt 3D: Simple Custom Material QML Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates creating a custom material in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simple-qml-example.xml" xlink:role="page">Qt 3D: Simple QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML application that demonstrates how to render a scene in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-wireframe-example.xml" xlink:role="page">Qt 3D: Wireframe QML Example</db:link></db:term>
<db:listitem>
<db:para>A Qt 3D QML application that implements a single-pass wireframe rendering method.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-stocqt-example.xml" xlink:role="page">StocQt</db:link></db:term>
<db:listitem>
<db:para>A configurable stock chart for 100 stocks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-zoomlinechart-example.xml" xlink:role="page">Zoom Line Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to create your own custom zooming effect.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="data-processing-i-o">
<db:title>Data Processing &amp; I/O</db:title>
<db:variablelist role="category Data Processing &amp; I/O">
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-bindableproperties-example.xml" xlink:role="page">Bindable Properties</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how the usage of bindable properties can simplify your C++ code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-books-example.xml" xlink:role="page">Books</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt SQL classes with a model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-cachedtable-example.xml" xlink:role="page">Cached SQL Table</db:link></db:term>
<db:listitem>
<db:para>The Cached Table example shows how a table view can be used to access a database, caching any changes to the data until the user explicitly submits them using a push button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-tools-contiguouscache-example.xml" xlink:role="page">Contiguous Cache Example</db:link></db:term>
<db:listitem>
<db:para>The Contiguous Cache example shows how to use QContiguousCache to manage memory usage for very large models. In some environments memory is limited and, even when it isn't, users still dislike an application using excessive memory. Using QContiguousCache to manage a list, rather than loading the entire list into memory, allows the application to limit the amount of memory it uses, regardless of the size of the data set it accesses.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtxml-dombookmarks-example.xml" xlink:role="page">DOM Bookmarks Application</db:link></db:term>
<db:listitem>
<db:para>Provides a reader for XML Bookmark Exchange Language files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-drilldown-example.xml" xlink:role="page">Drill Down Example</db:link></db:term>
<db:listitem>
<db:para>The Drill Down example shows how to read data from a database as well as submit changes, using the QSqlRelationalTableModel and QDataWidgetMapper classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-echoplugin-example.xml" xlink:role="page">Echo Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a Qt plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-sharedmemory-example.xml" xlink:role="page">IPC: Shared Memory</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to share image data between different processes using the Shared Memory IPC mechanism.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-mimetypes-mimetypebrowser-example.xml" xlink:role="page">MIME Type Browser</db:link></db:term>
<db:listitem>
<db:para>Shows the hierarchy of MIME types and can be used to determine the MIME type of a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-mandelbrot-example.xml" xlink:role="page">Mandelbrot</db:link></db:term>
<db:listitem>
<db:para>The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-masterdetail-example.xml" xlink:role="page">Master Detail Example</db:link></db:term>
<db:listitem>
<db:para>The Master Detail Example shows how to present data from different data sources in the same application. The album titles, and the corresponding artists and release dates, are kept in a database, while each album's tracks are stored in an XML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-cbordump-example.xml" xlink:role="page">Parsing and displaying CBOR data</db:link></db:term>
<db:listitem>
<db:para>A demonstration of how to parse files in CBOR format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-primecounter-example.xml" xlink:role="page">Prime Counter</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to monitor the progress of concurrent operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-semaphores-example.xml" xlink:role="page">Producer and Consumer using Semaphores</db:link></db:term>
<db:listitem>
<db:para>The Producer and Consumer using Semaphores example shows how to use QSemaphore to control access to a circular buffer shared by a producer thread and a consumer thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-waitconditions-example.xml" xlink:role="page">Producer and Consumer using Wait Conditions</db:link></db:term>
<db:listitem>
<db:para>The Producer and Consumer using Wait Conditions example shows how to use QWaitCondition and QMutex to control access to a circular buffer shared by a producer thread and a consumer thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-streambookmarks-example.xml" xlink:role="page">QXmlStream Bookmarks Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to read and write XBEL files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-localstorage-example.xml" xlink:role="page">Qt Quick Examples - Local Storage</db:link></db:term>
<db:listitem>
<db:para>A collection of QML local storage examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-querymodel-example.xml" xlink:role="page">Query Model Example</db:link></db:term>
<db:listitem>
<db:para>The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-queuedcustomtype-example.xml" xlink:role="page">Queued Custom Type</db:link></db:term>
<db:listitem>
<db:para>The Queued Custom Type example shows how to send custom types between threads with queued signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-relationaltablemodel-example.xml" xlink:role="page">Relational Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Relational Table Model example shows how to use table views with a relational model to visualize the relations between items in a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlbrowser-example.xml" xlink:role="page">SQL Browser</db:link></db:term>
<db:listitem>
<db:para>The SQL Browser example shows how a data browser can be used to visualize the results of SQL statements on a live database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlwidgetmapper-example.xml" xlink:role="page">SQL Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The SQL Widget Mapper example shows how to use a map information from a database to widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-savegame-example.xml" xlink:role="page">Saving and Loading a Game</db:link></db:term>
<db:listitem>
<db:para>How to save and load a game using Qt's JSON or CBOR classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-convert-example.xml" xlink:role="page">Serialization Converter</db:link></db:term>
<db:listitem>
<db:para>How to convert between different serialization formats.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-tablemodel-example.xml" xlink:role="page">Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Table Model example shows how to use a specialized SQL table model with table views to edit information in a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-undoframework-example.xml" xlink:role="page">Undo Framework Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement undo/redo functionality with the Qt undo framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-wordcount-example.xml" xlink:role="page">Word Count</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the map-reduce algorithm.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="connectivity">
<db:title>Connectivity</db:title>
<db:variablelist role="category Connectivity">
<db:varlistentry>
<db:term><db:link xlink:href="qtnfc-annotatedurl-example.xml" xlink:role="page">Annotated URL</db:link></db:term>
<db:listitem>
<db:para>Reads formatted NFC Data Exchange Format (NDEF) messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-btchat-example.xml" xlink:role="page">Bluetooth Chat</db:link></db:term>
<db:listitem>
<db:para>Shows communication through Bluetooth using RFCOMM protocol.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-heartrate-game-example.xml" xlink:role="page">Bluetooth Low Energy Heart Rate Game</db:link></db:term>
<db:listitem>
<db:para>A game demonstrating the interaction with a Bluetooth Low Energy Heart Rate device/service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-heartrate-server-example.xml" xlink:role="page">Bluetooth Low Energy Heart Rate Server</db:link></db:term>
<db:listitem>
<db:para>An example demonstrating how to set up and advertise a GATT service. The example demonstrates the use of the Qt Bluetooth Low Energy classes related to peripheral (slave) functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-lowenergyscanner-example.xml" xlink:role="page">Bluetooth Low Energy Scanner</db:link></db:term>
<db:listitem>
<db:para>An application designed to browse the content of Bluetooth Low Energy peripheral devices. The example demonstrates the use of all Qt Bluetooth Low Energy classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-chat-example.xml" xlink:role="page">D-Bus Chat</db:link></db:term>
<db:listitem>
<db:para>Demonstrates communication among instances of an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-complexpingpong-example.xml" xlink:role="page">D-Bus Complex Ping Pong</db:link></db:term>
<db:listitem>
<db:para>Demonstrates usage of the Qt D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-pingpong-example.xml" xlink:role="page">D-Bus Ping Pong</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple message system using D-Bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-remotecontrolledcar-example.xml" xlink:role="page">D-Bus Remote Controlled Car</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt D-Bus to control a car from another application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneclient-example.xml" xlink:role="page">Local Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalSocket for a simple local service client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneserver-example.xml" xlink:role="page">Local Fortune Server</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalServer and QLocalSocket for serving a simple local service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnfc-ndefeditor-example.xml" xlink:role="page">NDEF Editor</db:link></db:term>
<db:listitem>
<db:para>Reads and writes NFC Data Exchange Format (NDEF) messages to NFC Forum Tags.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-quickmulticastclient-example.xml" xlink:role="page">Quick CoAP Multicast Discovery</db:link></db:term>
<db:listitem>
<db:para>Using the CoAP client for a multicast resource discovery with a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-quicksecureclient-example.xml" xlink:role="page">Quick Secure CoAP Client</db:link></db:term>
<db:listitem>
<db:para>Securing the CoAP client and using it with a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-simplecoapclient-example.xml" xlink:role="page">Simple CoAP Client</db:link></db:term>
<db:listitem>
<db:para>Creating an application that communicates with a CoAP server.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="networking">
<db:title>Networking</db:title>
<db:variablelist role="category Networking">
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-rsslisting-example.xml" xlink:role="page">A minimal RSS listing application</db:link></db:term>
<db:listitem>
<db:para>A demonstration of how to fetch and display a network resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-blockingfortuneclient-example.xml" xlink:role="page">Blocking Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpclient-example.xml" xlink:role="page">DTLS client</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to implement client-side DTLS connections.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpserver-example.xml" xlink:role="page">DTLS server</db:link></db:term>
<db:listitem>
<db:para>This examples demonstrates how to implement a simple DTLS server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneclient-example.xml" xlink:role="page">Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneserver-example.xml" xlink:role="page">Fortune Server</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a server for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-http-example.xml" xlink:role="page">HTTP Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple HTTP client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-imagescaling-example.xml" xlink:role="page">Image Scaling</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to asynchronously download and scale images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastreceiver-example.xml" xlink:role="page">Multicast Receiver</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to receive information sent to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastsender-example.xml" xlink:role="page">Multicast Sender</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to send messages to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-network-chat-example.xml" xlink:role="page">Network Chat</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a stateful peer-to-peer Chat client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-colorpaletteclient-example.xml" xlink:role="page">Qt Quick Demo - RESTful API client</db:link></db:term>
<db:listitem>
<db:para>Example of how to create a RESTful API QML client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-securesocketclient-example.xml" xlink:role="page">Secure Socket Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to communicate over an encrypted (SSL) connection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-threadedfortuneserver-example.xml" xlink:role="page">Threaded Fortune Server</db:link></db:term>
<db:listitem>
<db:para>The Threaded Fortune Server example shows how to create a server for a simple network service that uses threads to handle requests from different clients. It is intended to be run alongside the Fortune Client example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-torrent-example.xml" xlink:role="page">Torrent Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates complex TCP/IP operations.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="positioning-location">
<db:title>Positioning &amp; Location</db:title>
<db:variablelist role="category Positioning &amp; Location">
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-geojson-viewer-example.xml" xlink:role="page">GeoJson Viewer (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The GeoJson viewer example demonstrates how to manipulate MapItems, handle user input and I/O to and from a GeoJson file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-logfilepositionsource-example.xml" xlink:role="page">Log File Position Source (C++)</db:link></db:term>
<db:listitem>
<db:para>Logfile Position Source shows how to create and work with a custom position source. It can be useful for simulating GPS data, or when the data is received in some custom format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-mapviewer-example.xml" xlink:role="page">Map Viewer (QML)</db:link></db:term>
<db:listitem>
<db:para>The Map Viewer example shows how to display and interact with a map, search for an address, and find driving directions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-itemview-transitions-example.xml" xlink:role="page">MapItemView Transitions (QML)</db:link></db:term>
<db:listitem>
<db:para>How to use transitions together with MapItemView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-minimal-map-example.xml" xlink:role="page">Minimal Map (QML)</db:link></db:term>
<db:listitem>
<db:para>The minimum code to display a map using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-example.xml" xlink:role="page">Places (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places example demonstrates how to search for Places and access related content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-list-example.xml" xlink:role="page">Places List (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places List example demonstrates how to search for and display a list of places using a ListView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-map-example.xml" xlink:role="page">Places Map (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places Map example demonstrates how to search for and display a list of places on a map using a MapItemView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-planespotter-example.xml" xlink:role="page">Plane Spotter (QML)</db:link></db:term>
<db:listitem>
<db:para>The Plane Spotter example demonstrates the tight integration of location and positioning data types into QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-satelliteinfo-example.xml" xlink:role="page">SatelliteInfo (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The SatelliteInfo example shows the available satellites using Sky View, Table View, or RSSI View and the user's current position.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-weatherinfo-example.xml" xlink:role="page">Weather Info (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The Weather Info example shows how to use the user's current position to retrieve local content from a web service in a C++ plugin for QML.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="user-interface-components">
<db:title>User Interface Components</db:title>
<db:variablelist role="category User Interface Components">
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-addressbook-example.xml" xlink:role="page">Address Book</db:link></db:term>
<db:listitem>
<db:para>The address book example shows how to use proxy models to display different views onto data from a single model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-arrowpad-example.xml" xlink:role="page">Arrow Pad Example</db:link></db:term>
<db:listitem>
<db:para>Understanding the Qt Linguist contexts concept and using two or more languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-basiclayouts-example.xml" xlink:role="page">Basic Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use the standard layout managers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-basicsortfiltermodel-example.xml" xlink:role="page">Basic Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Basic Sort/Filter Model example illustrates how to use QSortFilterProxyModel to perform basic sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calculator-example.xml" xlink:role="page">Calculator Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calendarwidget-example.xml" xlink:role="page">Calendar Widget Example</db:link></db:term>
<db:listitem>
<db:para>The Calendar Widget example shows use of QCalendarWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-coloreditorfactory-example.xml" xlink:role="page">Color Editor Factory Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create an editor that can be used by a QStyledItemDelegate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-combowidgetmapper-example.xml" xlink:role="page">Combo Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The Combo Widget Mapper example shows how to use a custom delegate to map information from a model to specific widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-completer-example.xml" xlink:role="page">Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthelp-contextsensitivehelp-example.xml" xlink:role="page">Context-Sensitive Help Example</db:link></db:term>
<db:listitem>
<db:para>Using the QHelpEngineCore class to implement context-sensitive help for applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-customsortfiltermodel-example.xml" xlink:role="page">Custom Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Sort/Filter Model example illustrates how to subclass QSortFilterProxyModel to perform advanced sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggableicons-example.xml" xlink:role="page">Draggable Icons Example</db:link></db:term>
<db:listitem>
<db:para>The Draggable Icons example shows how to drag and drop image data between widgets in the same application, and between different applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggabletext-example.xml" xlink:role="page">Draggable Text Example</db:link></db:term>
<db:listitem>
<db:para>Illustrates how to drag and drop text between widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-dropsite-example.xml" xlink:role="page">Drop Site Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to distinguish the various MIME formats available in a drag and drop operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-editabletreemodel-example.xml" xlink:role="page">Editable Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement a simple item-based tree model that can be used with other classes in the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-fetchmore-example.xml" xlink:role="page">Fetch More Example</db:link></db:term>
<db:listitem>
<db:para>The Fetch More example shows how to add items to an item view model on demand.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-flowlayout-example.xml" xlink:role="page">Flow Layout Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to arrange widgets for different window sizes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-frozencolumn-example.xml" xlink:role="page">Frozen Column Example</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to freeze a column within a QTableView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-notepad-example.xml" xlink:role="page">Getting Started Programming with Qt Widgets</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Widgets based notepad application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-groupbox-example.xml" xlink:role="page">Group Box Example</db:link></db:term>
<db:listitem>
<db:para>The Group Box example shows how to use the different kinds of group boxes in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-hellotr-example.xml" xlink:role="page">Hello tr() Example</db:link></db:term>
<db:listitem>
<db:para>Translating a small Hello World program to Latin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-i18n-example.xml" xlink:role="page">I18N Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates Qt's support for translated text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gestures-imagegestures-example.xml" xlink:role="page">Image Gestures Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of simple gestures in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-licensewizard-example.xml" xlink:role="page">License Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The License Wizard example shows how to implement complex wizards in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-lineedits-example.xml" xlink:role="page">Line Edits Example</db:link></db:term>
<db:listitem>
<db:para>The Line Edits example demonstrates the many ways that QLineEdit can be used, and shows the effects of various properties and validators on the input and output supplied by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-menus-example.xml" xlink:role="page">Menus Example</db:link></db:term>
<db:listitem>
<db:para>The Menus example demonstrates how menus can be used in a main window application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-abstractitemmodel-example.xml" xlink:role="page">Models and Views: AbstractItemModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QAbstractItemModel subclass as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-objectlistmodel-example.xml" xlink:role="page">Models and Views: Object ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QList&lt;QObject*&gt; as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-stringlistmodel-example.xml" xlink:role="page">Models and Views: String ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QStringList as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-orderform-example.xml" xlink:role="page">Order Form Example</db:link></db:term>
<db:listitem>
<db:para>The Order Form example shows how to generate rich text documents by combining a simple template with data input by the user in a dialog.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpdf-multipage-example.xml" xlink:role="page">PDF Multipage Viewer Example</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick PDF viewer that allows scrolling through the pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpdf-pdfviewer-example.xml" xlink:role="page">PDF Viewer Widget Example</db:link></db:term>
<db:listitem>
<db:para>A widget-based PDF viewer that allows scrolling through the pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview1-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 1 - A Simple ListView and Delegate</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quickwidgets-qquickwidgetversuswindow-opengl-example.xml" xlink:role="page">QQuickWidget - QQuickView Comparison Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the benefits of QQuickWidget over a QQuickView embedded as a native window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-regularexpression-example.xml" xlink:role="page">QRegularExpression Example</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpression example shows how regular expressions in Qt are applied to text by providing an environment in which new regular expressions can be created and tested on custom text strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-contactlist-example.xml" xlink:role="page">Qt Quick Controls - Contact List</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class that implements a simple contact list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-eventcalendar-example.xml" xlink:role="page">Qt Quick Controls - Event Calendar</db:link></db:term>
<db:listitem>
<db:para>A simple event calendar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-gallery-example.xml" xlink:role="page">Qt Quick Controls - Gallery</db:link></db:term>
<db:listitem>
<db:para>A gallery of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-pointerhandlers-example.xml" xlink:role="page">Qt Quick Examples - Pointer Handlers</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt Quick Input Handlers in interactive components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-positioners-example.xml" xlink:role="page">Qt Quick Examples - Positioners</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Positioner examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-qml-i18n-example.xml" xlink:role="page">Qt Quick I18N</db:link></db:term>
<db:listitem>
<db:para>Generating translation files (TS and QM) for a Qt Quick application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-layouts-example.xml" xlink:role="page">Qt Quick Layouts - Basic Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use layout types to arrange a UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-responsivelayouts-example.xml" xlink:role="page">Qt Quick Layouts - Responsive Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use LayoutItemProxy to make a responsive UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quickwidgets-quickwidget-example.xml" xlink:role="page">Qt Quick Widgets Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to mix QML with a Qt Widgets application using the QQuickWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-scribble-example.xml" xlink:role="page">Scribble Example</db:link></db:term>
<db:listitem>
<db:para>The Scribble example shows how to reimplement some of QWidget's event handlers to receive the events generated for the application's widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-settingseditor-example.xml" xlink:role="page">Settings Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Settings Editor example shows how Qt's standard settings support is used in an application by providing an editor that enables the user to view the settings for installed applications, and modify those that can be edited.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-shortcuteditor-example.xml" xlink:role="page">Shortcut Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Shortcut Editor example shows how to create a basic, read-write hierarchical model to use with Qt's standard view and QKeySequenceEdit classes. For a description of Model/View Programming, see the Model/View Programming overview.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-simpletreemodel-example.xml" xlink:role="page">Simple Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>The Simple Tree Model example shows how to use a hierarchical model with Qt's standard view classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-sliders-example.xml" xlink:role="page">Sliders Example</db:link></db:term>
<db:listitem>
<db:para>The Sliders example shows how to use the different types of sliders available in Qt: QSlider, QScrollBar and QDial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spinboxdelegate-example.xml" xlink:role="page">Spin Box Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Box Delegate example shows how to create an editor for a custom delegate in the model/view framework by reusing a standard Qt editor widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-spinboxes-example.xml" xlink:role="page">Spin Boxes Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Boxes example shows how to use the many different types of spin boxes available in Qt, from a simple QSpinBox widget to more complex editors like the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spreadsheet-example.xml" xlink:role="page">Spreadsheet</db:link></db:term>
<db:listitem>
<db:para>The Spreadsheet example shows how to create a simple spreadsheet application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-standarddialogs-example.xml" xlink:role="page">Standard Dialogs Example</db:link></db:term>
<db:listitem>
<db:para>The Standard Dialogs example shows the standard dialogs that are provided by Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-stardelegate-example.xml" xlink:role="page">Star Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Star Delegate example shows how to create a delegate that can paint itself and that supports editing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-styleplugin-example.xml" xlink:role="page">Style Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a plugin that extends Qt with a new GUI look and feel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-syntaxhighlighter-example.xml" xlink:role="page">Syntax Highlighter Example</db:link></db:term>
<db:listitem>
<db:para>The Syntax Highlighter example shows how to perform simple syntax highlighting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-tabdialog-example.xml" xlink:role="page">Tab Dialog Example</db:link></db:term>
<db:listitem>
<db:para>The Tab Dialog example shows how to construct a tab dialog using the QTabWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-tablet-example.xml" xlink:role="page">Tablet Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to use a Wacom tablet in Qt applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-knobs-example.xml" xlink:role="page">Touch Knobs Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to create custom controls that accept touch input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-shapedclock-example.xml" xlink:role="page">Translucent Background</db:link></db:term>
<db:listitem>
<db:para>The example shows how to make a round window with a translucent background.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-treemodelcompleter-example.xml" xlink:role="page">Tree Model Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Tree Model Completer example shows how to provide completion facilities for a hierarchical model, using a period as the separator to access Child, GrandChild and GrandGrandChild level objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-trivialwizard-example.xml" xlink:role="page">Trivial Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The Trivial Wizard example illustrates how to create a linear three-page registration wizard using three instances of QWizardPage and one instance of QWizard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-trollprint-example.xml" xlink:role="page">Troll Print Example</db:link></db:term>
<db:listitem>
<db:para>Updating translations for later releases.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-dialcontrol-example.xml" xlink:role="page">UI Components: Dial Control Example</db:link></db:term>
<db:listitem>
<db:para>The Dial Control Example shows how to create a speedometer-type dial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-flipable-example.xml" xlink:role="page">UI Components: Flipable Example</db:link></db:term>
<db:listitem>
<db:para>The Flipable Example shows an item that flips whenever clicked, rotating around the y-axis.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gallery-example.xml" xlink:role="page">Widgets Gallery Example</db:link></db:term>
<db:listitem>
<db:para>The Widgets Gallery example shows widgets relevant for designing UIs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-childwidget-example.xml" xlink:role="page">Widgets Tutorial - Child Widgets</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-toplevel-example.xml" xlink:role="page">Widgets Tutorial - Creating a Window</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-nestedlayouts-example.xml" xlink:role="page">Widgets Tutorial - Nested Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-windowlayout-example.xml" xlink:role="page">Widgets Tutorial - Using Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-windowflags-example.xml" xlink:role="page">Window Flags Example</db:link></db:term>
<db:listitem>
<db:para>The Window Flags example shows how to use the window flags available in Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="web-technologies">
<db:title>Web Technologies</db:title>
<db:variablelist role="category Web Technologies">
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-http-example.xml" xlink:role="page">HTTP Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple HTTP client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-rssnews-example.xml" xlink:role="page">Qt Quick Demo - RSS News</db:link></db:term>
<db:listitem>
<db:para>A QML RSS news reader that uses XmlListModel and XmlListModelRole custom QML types to download XML data, ListModel and ListElement to create a category list, and ListView to display the data.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="community-examples">
<db:title>Community Examples</db:title>
<db:para>To view and run examples provided through the Qt Project, visit the <db:link xlink:href="http://wiki.qt.io/Category:Learning::Demos_and_Examples">Community Examples</db:link> page.</db:para>
</db:section>
<db:section xml:id="all-examples">
<db:title>All Examples</db:title>
<db:para><db:link xlink:href="qtexamples.xml">All Qt Examples</db:link> lists all examples categorized by the Qt module they belong to.</db:para>
</db:section>
</db:article>
