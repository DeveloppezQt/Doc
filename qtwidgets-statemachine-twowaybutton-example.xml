<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Two-way Button Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Two-way button example shows how to use <db:link xlink:href="statemachine-api.xml">The State Machine Framework</db:link> to implement a simple state machine that toggles the current state when a button is clicked.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">int main(int argc, char **argv)
{
    QApplication app(argc, argv);
    QPushButton button;
    QStateMachine machine;
</db:programlisting>
<db:para>The application's main() function begins by constructing the application object, a button and a state machine.</db:para>
<db:programlisting language="cpp">    QState *off = new QState();
    off-&amp;gt;assignProperty(&amp;amp;button, &quot;text&quot;, &quot;Off&quot;);
    off-&amp;gt;setObjectName(&quot;off&quot;);

    QState *on = new QState();
    on-&amp;gt;setObjectName(&quot;on&quot;);
    on-&amp;gt;assignProperty(&amp;amp;button, &quot;text&quot;, &quot;On&quot;);
</db:programlisting>
<db:para>The state machine has two states; on and off. When either state is entered, the text of the button will be set accordingly.</db:para>
<db:programlisting language="cpp">    off-&amp;gt;addTransition(&amp;amp;button, SIGNAL(clicked()), on);
    on-&amp;gt;addTransition(&amp;amp;button, SIGNAL(clicked()), off);
</db:programlisting>
<db:para>When the state machine is in the off state and the button is clicked, it will transition to the on state; when the state machine is in the on state and the button is clicked, it will transition to the off state.</db:para>
<db:programlisting language="cpp">    machine.addState(off);
    machine.addState(on);
</db:programlisting>
<db:para>The states are added to the state machine; they become top-level (sibling) states.</db:para>
<db:programlisting language="cpp">    machine.setInitialState(off);
    machine.start();
</db:programlisting>
<db:para>The initial state is off; this is the state the state machine will immediately transition to once the state machine is started.</db:para>
<db:programlisting language="cpp">    button.resize(100, 50);
    button.show();
    return app.exec();
}
</db:programlisting>
<db:para>Finally, the button is resized and made visible, and the application event loop is entered.</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="statemachine/twowaybutton/main.cpp">statemachine/twowaybutton/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="statemachine/twowaybutton/twowaybutton.pro">statemachine/twowaybutton/twowaybutton.pro</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
