<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Drawer QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Side panel that can be opened and closed using a swipe gesture.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Popup</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Drawer is part of <db:simplelist><db:member>qtquickcontrols-navigation</db:member><db:member>qtquickcontrols-popups</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Drawer provides a swipe-based side panel, similar to those often used in touch interfaces to provide a central location for navigation.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-drawer.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para>Drawer can be positioned at any of the four edges of the content item. The drawer above is positioned against the left edge of the window. The drawer is then opened by <db:emphasis>&quot;dragging&quot;</db:emphasis> it out from the left edge of the window.</db:para>
<db:programlisting language="cpp">import QtQuick
import QtQuick.Controls

ApplicationWindow {
    id: window
    visible: true

    Drawer {
        id: drawer
        width: 0.66 * window.width
        height: window.height

        Label {
            text: &quot;Content goes here!&quot;
            anchors.centerIn: parent
        }
    }
}
</db:programlisting>
<db:para>Drawer is a special type of popup that resides at one of the window <db:link xlink:href="qml-qtquick-controls-drawer.xml#edge-prop">edges</db:link>. By default, Drawer re-parents itself to the window <db:code>overlay</db:code>, and therefore operates on window coordinates. It is also possible to manually set the <db:link xlink:href="qml-qtquick-controls-popup.xml#parent-prop">parent</db:link> to something else to make the drawer operate in a specific coordinate space.</db:para>
<db:para>Drawer can be configured to cover only part of its window edge. The following example illustrates how Drawer can be positioned to appear below a window header:</db:para>
<db:programlisting language="cpp">import QtQuick
import QtQuick.Controls

ApplicationWindow {
    id: window
    visible: true

    header: ToolBar { }

    Drawer {
        y: header.height
        width: window.width * 0.6
        height: window.height - header.height
    }
}
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtquick-controls-drawer.xml#position-prop">position</db:link> property determines how much of the drawer is visible, as a value between <db:code>0.0</db:code> and <db:code>1.0</db:code>. It is not possible to set the x-coordinate (or horizontal margins) of a drawer at the left or right window edge, or the y-coordinate (or vertical margins) of a drawer at the top or bottom window edge.</db:para>
<db:para>In the image above, the application's contents are <db:emphasis>&quot;pushed&quot;</db:emphasis> across the screen. This is achieved by applying a translation to the contents:</db:para>
<db:programlisting language="cpp">import QtQuick
import QtQuick.Controls

ApplicationWindow {
    id: window
    width: 200
    height: 228
    visible: true

    Drawer {
        id: drawer
        width: 0.66 * window.width
        height: window.height
    }

    Label {
        id: content

        text: &quot;Aa&quot;
        font.pixelSize: 96
        anchors.fill: parent
        verticalAlignment: Label.AlignVCenter
        horizontalAlignment: Label.AlignHCenter

        transform: Translate {
            x: drawer.position * content.width * 0.33
        }
    }
}
</db:programlisting>
<db:para>If you would like the application's contents to stay where they are when the drawer is opened, don't apply a translation.</db:para>
<db:para>Drawer can be configured as a non-closable persistent side panel by making the Drawer <db:link xlink:href="qml-qtquick-controls-popup.xml#modal-prop">non-modal</db:link> and <db:link xlink:href="qml-qtquick-controls-drawer.xml#interactive-prop">non-interactive</db:link>. See the <db:link xlink:href="qtquickcontrols-gallery-example.xml">Gallery</db:link> example for more details.</db:para>
<db:note>
<db:para>On some platforms, certain edges may be reserved for system gestures and therefore cannot be used with Drawer. For example, the top and bottom edges may be reserved for system notifications and control centers on Android and iOS.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-swipeview.xml">SwipeView</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-customize.xml#customizing-drawer">Customizing Drawer</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-navigation.xml">Navigation Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-popups.xml">Popup Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="dragMargin-prop">
<db:title>dragMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>dragMargin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance from the screen edge within which drag actions will open the drawer. Setting the value to <db:code>0</db:code> or less prevents opening the drawer by dragging.</db:para>
<db:para>The default value is <db:code>Qt.styleHints.startDragDistance</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-drawer.xml#interactive-prop">interactive</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="edge-prop">
<db:title>edge : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>edge</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the edge of the window at which the drawer will open from. The acceptable values are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.TopEdge</db:para>
</db:td>
<db:td>
<db:para>The top edge of the window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.LeftEdge</db:para>
</db:td>
<db:td>
<db:para>The left edge of the window (default).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.RightEdge</db:para>
</db:td>
<db:td>
<db:para>The right edge of the window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.BottomEdge</db:para>
</db:td>
<db:td>
<db:para>The bottom edge of the window.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="interactive-prop">
<db:title>[since QtQuick.Controls 2.2 (Qt 5.9)] interactive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>interactive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the drawer is interactive. A non-interactive drawer does not react to swipes.</db:para>
<db:para>The default value is <db:code>true</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.2 (Qt 5.9).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-drawer.xml#dragMargin-prop">dragMargin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the position of the drawer relative to its final destination. That is, the position will be <db:code>0.0</db:code> when the drawer is fully closed, and <db:code>1.0</db:code> when fully open.</db:para>
</db:section>
</db:section>
</db:article>
