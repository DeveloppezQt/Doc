<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PointLight QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a point light in the scene.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Light</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The point light can be described as a sphere, emitting light with equal strength in all directions from the center of the light. This is similar to the way a light bulb emits light.</db:para>
<db:para>Rotating or scaling a point light does not have any effect. Moving a point light will change the position from where the light is emitted.</db:para>
<db:para>By default, a point light intensity diminishes according to inverse-square-law. However, the fade-off (and range) can be controlled with the <db:link xlink:href="qml-qtquick3d-pointlight.xml#constantFade-prop">constantFade</db:link>, <db:link xlink:href="qml-qtquick3d-pointlight.xml#linearFade-prop">linearFade</db:link>, and <db:link xlink:href="qml-qtquick3d-pointlight.xml#quadraticFade-prop">quadraticFade</db:link> properties. Light attenuation is calculated using the formula: <db:link xlink:href="qml-qtquick3d-pointlight.xml#constantFade-prop">constantFade</db:link> + <db:code>distance</db:code> * (<db:link xlink:href="qml-qtquick3d-pointlight.xml#linearFade-prop">linearFade</db:link> * 0.01) + <db:code>distance^2</db:code> * (<db:link xlink:href="qml-qtquick3d-pointlight.xml#quadraticFade-prop">quadraticFade</db:link> * 0.0001)</db:para>
<db:section xml:id="a-simple-example-shading-a-sphere-in-three-different-ways">
<db:title>A simple example: shading a sphere in three different ways</db:title>
<db:para>Take a scene containing a sphere in front of a scaled up rectangle in the background. The default base color of the <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link> of the rectangle is white.</db:para>
<db:para>Without any lights and disabling light-related shading for the two meshes, we get the following:</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick3D
View3D {
    anchors.fill: parent

    PerspectiveCamera { z: 600 }

    Model {
        source: &quot;#Rectangle&quot;
        scale: Qt.vector3d(10, 10, 10)
        z: -100
        materials: PrincipledMaterial {
            lighting: PrincipledMaterial.NoLighting
        }
    }

    Model {
        source: &quot;#Sphere&quot;
        scale: Qt.vector3d(2, 2, 2)
        materials: PrincipledMaterial {
            lighting: PrincipledMaterial.NoLighting
            baseColor: &quot;#40c060&quot;
            roughness: 0.1
        }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/pointlight-1.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Adding a directional light, emitting down the Z axis by default, leads to the following:</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick3D
View3D {
    anchors.fill: parent

    PerspectiveCamera { z: 600 }

    DirectionalLight { }

    Model {
        source: &quot;#Rectangle&quot;
        scale: Qt.vector3d(10, 10, 10)
        z: -100
        materials: PrincipledMaterial { }
    }

    Model {
        source: &quot;#Sphere&quot;
        scale: Qt.vector3d(2, 2, 2)
        materials: PrincipledMaterial {
            baseColor: &quot;#40c060&quot;
            roughness: 0.1
        }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/pointlight-2.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>What if we now replace <db:link xlink:href="qml-qtquick3d-directionallight.xml">DirectionalLight</db:link> with:</db:para>
<db:programlisting language="qml">PointLight {
    z: 300
}
</db:programlisting>
<db:para>The white colored <db:link xlink:href="qml-qtquick3d-pointlight.xml">PointLight</db:link> here is moved on the Z axis so that it is halfway between the camera and the center of the scene. Unlike <db:link xlink:href="qml-qtquick3d-directionallight.xml">DirectionalLight</db:link>, the rotation of the <db:link xlink:href="qml-qtquick3d-pointlight.xml">PointLight</db:link> does not matter, whereas its position is significant. The diminishing intensity is visible here, especially on the rectangle mesh in the background.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/pointlight-3.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>For more usage examples, see <db:link xlink:href="qtquick3d-lights-example.xml">Qt Quick 3D - Lights Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-directionallight.xml">DirectionalLight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-spotlight.xml">SpotLight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="constantFade-prop">
<db:title>constantFade : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>constantFade</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is constant factor of the attenuation term of the light. The default value is 1.0.</db:para>
</db:section>
<db:section xml:id="linearFade-prop">
<db:title>linearFade : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>linearFade</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property increases the rate at which the lighting effect dims the light in proportion to the distance to the light. The default value is <db:code>0.0</db:code>, meaning the light doesn't have linear fade. The value used here is multiplied by <db:code>0.01</db:code> before being used to calculate light attenuation.</db:para>
</db:section>
<db:section xml:id="quadraticFade-prop">
<db:title>quadraticFade : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>quadraticFade</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property increases the rate at which the lighting effect dims the light in proportion to the inverse square law. The default value is 1.0 meaning the point light fade exactly follows the inverse square law i.e. when distance to an object doubles the light intensity decreases to 1/4th. The value used here is multiplied by <db:code>0.0001</db:code> before being used to calculate light attenuation.</db:para>
</db:section>
</db:section>
</db:article>
