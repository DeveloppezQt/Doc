<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D: Simple QML Example</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A QML application that demonstrates how to render a scene in Qt 3D.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/simple-qml.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>Simple</db:emphasis> demonstrates how to render a scene in Qt 3D.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="setting-up-the-scene">
<db:title>Setting Up the Scene</db:title>
<db:para>We set up the entire scene in the <db:emphasis>main.qml</db:emphasis> file.</db:para>
<db:para>To be able to use the types in the Q3D and Q3D Render modules, we must import the modules:</db:para>
<db:programlisting language="cpp">import Qt3D.Core 2.0
import Qt3D.Render 2.0
</db:programlisting>
<db:para>The first entities we create are a <db:link xlink:href="qml-qt3d-render-camera.xml">Camera</db:link>, which represents the camera used for the final rendering, and a camera controller, which allows us to control this camera using the keyboard or the mouse:</db:para>
<db:programlisting language="cpp">    Camera {
        id: camera
        projectionType: CameraLens.PerspectiveProjection
        fieldOfView: 45
        aspectRatio: 16/9
        nearPlane : 0.1
        farPlane : 1000.0
        position: Qt.vector3d( 0.0, 0.0, -40.0 )
        upVector: Qt.vector3d( 0.0, 1.0, 0.0 )
        viewCenter: Qt.vector3d( 0.0, 0.0, 0.0 )
    }

    OrbitCameraController {
        camera: camera
    }
</db:programlisting>
<db:para>A <db:link xlink:href="qml-qt3d-render-rendersettings.xml">RenderSettings</db:link> entity specifies a <db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml">ForwardRenderer</db:link> as the active framegraph:</db:para>
<db:programlisting language="cpp">    components: [
        RenderSettings {
            activeFrameGraph: ForwardRenderer {
                clearColor: Qt.rgba(0, 0.5, 1, 1)
                camera: camera
                showDebugOverlay: true
            }
        },
</db:programlisting>
<db:para>The event source is set by the Qt3DQuickWindow:</db:para>
<db:programlisting language="cpp">        InputSettings { }
</db:programlisting>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qt3d.git/tree/examples/qt3d/simple-qml?h=5.15">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
