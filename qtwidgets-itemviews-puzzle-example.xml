<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Item Views Puzzle Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Puzzle example shows how to enable drag and drop with a custom model to allow items to be transferred between a view and another widget.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/itemviewspuzzle-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example is an implementation of a simple jigsaw puzzle game using the built-in support for drag and drop provided by Qt's model/view framework. The <db:link xlink:href="qtwidgets-draganddrop-puzzle-example.xml">Drag and Drop Puzzle</db:link> example shows many of the same features, but takes an alternative approach that uses Qt's drag and drop API at the application level to handle drag and drop operations.</db:para>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtbase.git/tree/examples/widgets/itemviews/puzzle?h=6.0">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
