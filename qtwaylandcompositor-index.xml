<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Wayland Compositor</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>An API to develop display servers that support the Wayland protocol.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Wayland Compositor is a module that provides convenient and powerful QML and C++ APIs for developing custom display servers based on the <db:link xlink:href="https://wayland.freedesktop.org/">Wayland</db:link> protocol. The display server, often called a compositor, displays content from client applications that support the Wayland protocol.</db:para>
<db:para>Wayland's design philosophy is to keep the core protocol simple and minimal. Developers can then expand on this core protocol with use-case-specific extensions. Qt Wayland Compositor supports many common extensions by default, and also has APIs to enable the creation of new, custom extensions.</db:para>
<db:para>Typically, a compositor written with Qt Wayland Compositor becomes a subsystem inside a larger application manager process. Qt Wayland Compositor provides the APIs to communicate with clients and display their content on the screen. The QML APIs contain high-level APIs that easily integrate with the rest of Qt, enabling convenient animations, effects, and UI through Qt Quick. There are also C++ APIs available - if you need more low-level access.</db:para>
<db:para>An application manager would typically implement additional features such as application life cycle, virtual keyboard input, security, and Inter-Process Communication (IPC). Qt provides the APIs that can be used to develop the remaining parts of an application manager in other modules. The <db:link xlink:href="https://www.qt.io/qt-automotive-suite/">Qt Automotive Suite</db:link> provides <db:link xlink:href="https://doc.qt.io/QtApplicationManager">Qt Application Manager</db:link>, which is a complete application manager that includes a compositor developed using Qt Wayland Compositor.</db:para>
<db:para>For more information on Wayland, see <db:link xlink:href="wayland-and-qt.xml">Wayland and Qt</db:link>.</db:para>
<db:section xml:id="features-of-qt-wayland-compositor">
<db:title>Features of Qt Wayland Compositor</db:title>
<db:para>The Qt Wayland Compositor includes features necessary to create a compositor:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>A QML API to display and manipulate client content, fully integrated with all the features in Qt Quick.</db:para>
</db:listitem>
<db:listitem>
<db:para>A C++ API for low-level access and control.</db:para>
</db:listitem>
<db:listitem>
<db:para>Support for common extensions, including XDG Shell and IVI Application.</db:para>
</db:listitem>
<db:listitem>
<db:para>APIs to easily expand the support for custom extensions.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="environment-variables-and-command-line-arguments">
<db:title>Environment Variables and Command-line Arguments</db:title>
<db:para>The Qt Wayland Compositor recognizes the following environment variables and command-line arguments:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Environment variables:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis role="bold">QT_WAYLAND_HARDWARE_INTEGRATION</db:emphasis> Selects the hardware integration plugin to use.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">QT_WAYLAND_CLIENT_BUFFER_INTEGRATION</db:emphasis> Selects the client buffer integration plugin to use.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">QT_WAYLAND_SERVER_BUFFER_INTEGRATION</db:emphasis> Selects the server integration plugin to use.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Command-line arguments:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>--wayland-socket-name</db:code> Overrides the default socket name used for communicating with clients.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:para>Take a look at the <db:link xlink:href="qtwaylandcompositor-examples.xml">Qt Wayland Compositor Examples</db:link> to learn how these APIs can be used to write custom compositors.</db:para>
</db:section>
<db:section xml:id="api-reference">
<db:title>API Reference</db:title>
<db:para>The Qt Wayland Compositor can be used from C++ or QML:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtwayland-compositor-qmlmodule.xml">Qt Wayland Compositor QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwaylandcompositor-module.xml">Qt Wayland Compositor C++ Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="module-evolution">
<db:title>Module Evolution</db:title>
<db:para><db:link xlink:href="qtwayland-changes-qt6.xml">Porting to Qt 6 - Qt Wayland Compositor</db:link> lists important changes in the module API and functionality that were done for the Qt 6 series of Qt.</db:para>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Wayland Compositor and the Qt Wayland integration plugin are available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>.</db:para>
<db:para>In addition, Qt Wayland Compositor is available under the <db:link xlink:href="http://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License, version 3</db:link>, while the Qt Wayland integration plugin is available under the <db:link xlink:href="http://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License, version 3</db:link> or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>.</db:para>
<db:para>See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>Qt Wayland Compositor and the Qt Wayland integration plugin use protocol definitions under following permissive licenses:</db:para>
<db:variablelist role="groupsbymodule attributions-qtwaylandcompositor">
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-eglstream-controller.xml" xlink:role="page">Wayland EGLStream Controller Protocol, version 1.1.1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-fullscreen-protocol.xml" xlink:role="page">Wayland Fullscreen Shell Protocol, version unstable v1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-ivi-extension-protocol.xml" xlink:role="page">Wayland IVI Extension Protocol, version 1.9.1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-linux-dmabuf-unstable-v1.xml" xlink:role="page">Wayland Linux Dmabuf Unstable V1 Protocol, version unstable v1, version 3</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-primary-selection-protocol.xml" xlink:role="page">Wayland Primary Selection Protocol, version 1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-protocol.xml" xlink:role="page">Wayland Protocol, version 1.16.0</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-scaler-protocol.xml" xlink:role="page">Wayland Scaler Protocol, version 2</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-tablet-protocol.xml" xlink:role="page">Wayland Tablet Protocol, version unstable v2, version 1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-text-input-unstable.xml" xlink:role="page">Wayland Text Input Protocol, version unstable v2</db:link></db:term>
<db:listitem>
<db:para>HPND License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-viewporter-protocol.xml" xlink:role="page">Wayland Viewporter Protocol, version 1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-xdg-output-protocol.xml" xlink:role="page">Wayland XDG Output Protocol, version unstable v1, version 3</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-xdg-shell-protocol.xml" xlink:role="page">Wayland XDG Shell Protocol, version 1.18</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-attribution-wayland-xdg-decoration-protocol.xml" xlink:role="page">Wayland xdg-decoration Protocol, version unstable v1, version 1</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
