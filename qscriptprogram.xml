<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QScriptProgram Class</db:title>
<db:productname>QtScript</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>QtScript Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> class encapsulates a Qt Script program.</db:para>
<db:para>This class was introduced in Qt 4.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QScriptProgram</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += script</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QScriptProgram is part of <db:simplelist><db:member><db:link xlink:href="script.xml">Scripting Classes and Overviews</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> retains the compiled representation of the script if possible. Thus, <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> can be used to evaluate the same script multiple times more efficiently.</db:para>
<db:programlisting language="cpp">QScriptEngine engine;
QScriptProgram program(&quot;1 + 2&quot;);
QScriptValue result = engine.evaluate(program);
</db:programlisting>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QScriptProgram">
<db:title>QScriptProgram::QScriptProgram()</db:title>
<db:constructorsynopsis>
<db:methodname>QScriptProgram</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QScriptProgram()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a null <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link>.</db:para>
</db:section>
<db:section xml:id="QScriptProgram-1">
<db:title>QScriptProgram::QScriptProgram(const QString &amp;<db:emphasis>sourceCode</db:emphasis>, const QString <db:emphasis>fileName</db:emphasis> = QString(), int <db:emphasis>firstLineNumber</db:emphasis> = 1)</db:title>
<db:constructorsynopsis>
<db:methodname>QScriptProgram</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>sourceCode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString</db:type>
<db:parameter>fileName</db:parameter>
<db:initializer>QString()</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>firstLineNumber</db:parameter>
<db:initializer>1</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QScriptProgram(const QString &amp;sourceCode, const QString fileName, int firstLineNumber)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> with the given <db:code role="parameter">sourceCode</db:code>, <db:code role="parameter">fileName</db:code> and <db:code role="parameter">firstLineNumber</db:code>.</db:para>
</db:section>
<db:section xml:id="QScriptProgram-2">
<db:title>QScriptProgram::QScriptProgram(const QScriptProgram &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QScriptProgram</db:methodname>
<db:methodparam>
<db:type>const QScriptProgram &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QScriptProgram(const QScriptProgram &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QScriptProgram">
<db:title>QScriptProgram::~QScriptProgram()</db:title>
<db:destructorsynopsis>
<db:methodname>~QScriptProgram</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QScriptProgram()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link>.</db:para>
</db:section>
<db:section xml:id="fileName">
<db:title>QString QScriptProgram::fileName() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>fileName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString fileName() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the filename associated with this program.</db:para>
</db:section>
<db:section xml:id="firstLineNumber">
<db:title>int QScriptProgram::firstLineNumber() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>firstLineNumber</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int firstLineNumber() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the line number associated with this program.</db:para>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QScriptProgram::isNull() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isNull</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isNull() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if this <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> is null; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="sourceCode">
<db:title>QString QScriptProgram::sourceCode() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>sourceCode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString sourceCode() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the source code of this program.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QScriptProgram::operator!=(const QScriptProgram &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QScriptProgram &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QScriptProgram &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if this <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> is not equal to <db:code role="parameter">other</db:code>; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QScriptProgram &amp;QScriptProgram::operator=(const QScriptProgram &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QScriptProgram &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QScriptProgram &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QScriptProgram &amp; operator=(const QScriptProgram &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns the <db:code role="parameter">other</db:code> value to this <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QScriptProgram::operator==(const QScriptProgram &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QScriptProgram &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QScriptProgram &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if this <db:link xlink:href="qscriptprogram.xml">QScriptProgram</db:link> is equal to <db:code role="parameter">other</db:code>; otherwise returns false.</db:para>
</db:section>
</db:section>
</db:article>
