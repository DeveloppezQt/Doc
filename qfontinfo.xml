<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QFontInfo Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> class provides general information about fonts.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFontInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QFontInfo is part of <db:simplelist><db:member>appearance</db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> class provides the same access functions as <db:link xlink:href="qfont.xml">QFont</db:link>, e.g. <db:link xlink:href="qfontinfo.xml#family">family</db:link>(), <db:link xlink:href="qfontinfo.xml#pointSize">pointSize</db:link>(), <db:link xlink:href="qfontinfo.xml#italic">italic</db:link>(), <db:link xlink:href="qfontinfo.xml#weight">weight</db:link>(), <db:link xlink:href="qfontinfo.xml#fixedPitch">fixedPitch</db:link>(), <db:link xlink:href="qfontinfo.xml#styleHint">styleHint</db:link>() etc. But whilst the <db:link xlink:href="qfont.xml">QFont</db:link> access functions return the values that were set, a <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> object returns the values that apply to the font that will actually be used to draw the text.</db:para>
<db:para>For example, when the program asks for a 25pt Courier font on a machine that has a non-scalable 24pt Courier font, <db:link xlink:href="qfont.xml">QFont</db:link> will (normally) use the 24pt Courier for rendering. In this case, <db:link xlink:href="qfont.xml#pointSize">QFont::pointSize</db:link>() returns 25 and <db:link xlink:href="qfontinfo.xml#pointSize">QFontInfo::pointSize</db:link>() returns 24.</db:para>
<db:para>There are three ways to create a <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> object.</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Calling the <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> constructor with a <db:link xlink:href="qfont.xml">QFont</db:link> creates a font info object for a screen-compatible font, i.e. the font cannot be a printer font. If the font is changed later, the font info object is <db:emphasis>not</db:emphasis> updated.</db:para>
<db:para>(Note: If you use a printer font the values returned may be inaccurate. Printer fonts are not always accessible so the nearest screen font is used if a printer font is supplied.)</db:para>
</db:listitem>
<db:listitem>
<db:para>QWidget::fontInfo() returns the font info for a widget's font. This is equivalent to calling <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link>(widget-&gt;font()). If the widget's font is changed later, the font info object is <db:emphasis>not</db:emphasis> updated.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qpainter.xml#fontInfo">QPainter::fontInfo</db:link>() returns the font info for a painter's current font. If the painter's font is changed later, the font info object is <db:emphasis>not</db:emphasis> updated.</db:para>
</db:listitem>
</db:orderedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml">QFont</db:link></db:member>
<db:member><db:link xlink:href="qfontmetrics.xml">QFontMetrics</db:link></db:member>
<db:member><db:link xlink:href="qfontdatabase.xml">QFontDatabase</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QFontInfo">
<db:title>QFontInfo::QFontInfo(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Constructs a font info object for <db:code role="parameter">font</db:code>.</db:para>
<db:para>The font must be screen-compatible, i.e. a font you use when drawing text in widgets or <db:link xlink:href="qpixmap.xml">pixmaps</db:link>, not <db:link xlink:href="qpicture.xml">QPicture</db:link> or QPrinter.</db:para>
<db:para>The font info object holds the information for the font that is passed in the constructor at the time it is created, and is not updated if the font's attributes are changed later.</db:para>
<db:para>Use <db:link xlink:href="qpainter.xml#fontInfo">QPainter::fontInfo</db:link>() to get the font info when painting. This will give correct results also when painting on paint device that is not screen-compatible.</db:para>
</db:section>
<db:section xml:id="QFontInfo-1">
<db:title>QFontInfo::QFontInfo(const QFontInfo &amp;<db:emphasis>fi</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">fi</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QFontInfo">
<db:title>[noexcept] QFontInfo::~QFontInfo()</db:title>
<db:para>Destroys the font info object.</db:para>
</db:section>
<db:section xml:id="bold">
<db:title>bool QFontInfo::bold() const</db:title>
<db:para>Returns <db:code>true</db:code> if <db:link xlink:href="qfontinfo.xml#weight">weight</db:link>() would return a value greater than <db:link xlink:href="qfont.xml#Weight-enum">QFont::Normal</db:link>; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfontinfo.xml#weight">weight</db:link>()</db:member>
<db:member><db:link xlink:href="qfont.xml#bold">QFont::bold</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="exactMatch">
<db:title>bool QFontInfo::exactMatch() const</db:title>
<db:para>Returns <db:code>true</db:code> if the matched window system font is exactly the same as the one specified by the font; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#exactMatch">QFont::exactMatch</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="family">
<db:title>QString QFontInfo::family() const</db:title>
<db:para>Returns the family name of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#family">QFont::family</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fixedPitch">
<db:title>bool QFontInfo::fixedPitch() const</db:title>
<db:para>Returns the fixed pitch value of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#fixedPitch">QFont::fixedPitch</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="italic">
<db:title>bool QFontInfo::italic() const</db:title>
<db:para>Returns the italic value of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#italic">QFont::italic</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pixelSize">
<db:title>int QFontInfo::pixelSize() const</db:title>
<db:para>Returns the pixel size of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#pointSize">QFont::pointSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointSize">
<db:title>int QFontInfo::pointSize() const</db:title>
<db:para>Returns the point size of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfontinfo.xml#pointSizeF">pointSizeF</db:link>()</db:member>
<db:member><db:link xlink:href="qfont.xml#pointSize">QFont::pointSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointSizeF">
<db:title>qreal QFontInfo::pointSizeF() const</db:title>
<db:para>Returns the point size of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#pointSizeF">QFont::pointSizeF</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rawMode">
<db:title>bool QFontInfo::rawMode() const</db:title>
<db:para>Returns <db:code>true</db:code> if the font is a raw mode font; otherwise returns false.</db:para>
<db:para>If it is a raw mode font, all other functions in <db:link xlink:href="qfontinfo.xml">QFontInfo</db:link> will return the same values set in the <db:link xlink:href="qfont.xml">QFont</db:link>, regardless of the font actually used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#rawMode">QFont::rawMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="style">
<db:title>QFont::Style QFontInfo::style() const</db:title>
<db:para>Returns the style value of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#style">QFont::style</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="styleHint">
<db:title>QFont::StyleHint QFontInfo::styleHint() const</db:title>
<db:para>Returns the style of the matched window system font.</db:para>
<db:para>Currently only returns the style hint set in <db:link xlink:href="qfont.xml">QFont</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#styleHint">QFont::styleHint</db:link>()</db:member>
<db:member><db:link xlink:href="qfont.xml#StyleHint-enum">QFont::StyleHint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="styleName">
<db:title>[since 4.8] QString QFontInfo::styleName() const</db:title>
<db:para>Returns the style name of the matched window system font on systems that support it.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#styleName">QFont::styleName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[since 5.0] void QFontInfo::swap(QFontInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this font info instance with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
</db:section>
<db:section xml:id="weight">
<db:title>int QFontInfo::weight() const</db:title>
<db:para>Returns the weight of the matched window system font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#weight">QFont::weight</db:link>()</db:member>
<db:member><db:link xlink:href="qfontinfo.xml#bold">bold</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QFontInfo &amp;QFontInfo::operator=(const QFontInfo &amp;<db:emphasis>fi</db:emphasis>)</db:title>
<db:para>Assigns the font info in <db:code role="parameter">fi</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
