<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>World Time Clock Builder Example</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>Creating forms with Qt Designer that contain custom widgets that can be dynamically generated at run-time.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/worldtimeclockbuilder-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example uses a form containing the custom widget plugin described in the <db:link xlink:href="qtdesigner-worldtimeclockplugin-example.xml">World Time Clock Plugin</db:link> example, and dynamically generates a user interface using the <db:link xlink:href="quiloader.xml">QUiLoader</db:link> class, part of the <db:link xlink:href="qtuitools-module.xml">QtUiTools</db:link> module.</db:para>
<db:section xml:id="preparation">
<db:title>Preparation</db:title>
<db:para>As with the <db:link xlink:href="qtdesigner-calculatorbuilder-example.xml">Calculator Builder</db:link> example, the project file for this example needs to include the appropriate definitions to ensure that it is built against the required Qt modules.</db:para>
<db:programlisting language="cpp">QT          += widgets uitools
SOURCES     = main.cpp
RESOURCES   = worldtimeclockbuilder.qrc
</db:programlisting>
<db:para>By appending <db:code>form</db:code> to the <db:code>CONFIG</db:code> declaration, we instruct <db:code>qmake</db:code> to generate a dependency on the <db:code>libQtUiTools</db:code> library containing the <db:link xlink:href="qtuitools-module.xml">QtUiTools</db:link> classes.</db:para>
<db:para>Note that we do not inform <db:code>qmake</db:code> about any UI files, and so none will be processed and built into the application. The resource file contains an entry for the particular form that we wish to use:</db:para>
<db:programlisting language="cpp">&amp;lt;!DOCTYPE RCC&amp;gt;&amp;lt;RCC version=&quot;1.0&quot;&amp;gt;
&amp;lt;qresource prefix=&quot;/forms&quot;&amp;gt;
   &amp;lt;file&amp;gt;form.ui&amp;lt;/file&amp;gt;
&amp;lt;/qresource&amp;gt;
&amp;lt;/RCC&amp;gt;
</db:programlisting>
<db:para>Forms do not need to be included with the application in this way. We only include a form in the application's resources for convenience, and to keep the example short.</db:para>
</db:section>
<db:section xml:id="loading-and-building-the-form">
<db:title>Loading and Building the Form</db:title>
<db:para>Since this example only loads and displays a pre-prepared form, all of the work can be done in the main() function. We are using a class from the <db:link xlink:href="qtuitools-module.xml">QtUiTools</db:link> library so, in addition to any other Qt classes that are normally required to write an application, we must include the appropriate header file:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtUiTools&amp;gt;
</db:programlisting>
<db:para>The main function initializes the resource system with the <db:link xlink:href="qdir.xml#Q_INIT_RESOURCE">Q_INIT_RESOURCE</db:link>() macro and constructs an <db:link xlink:href="qapplication.xml">QApplication</db:link> instance in the usual way:</db:para>
<db:programlisting language="cpp">int main(int argc, char *argv[])
{
    Q_INIT_RESOURCE(worldtimeclockbuilder);

    QApplication app(argc, argv);

    QUiLoader loader;
</db:programlisting>
<db:para>We construct a <db:link xlink:href="quiloader.xml">QUiLoader</db:link> object to handle the form we want to use.</db:para>
<db:para>The form itself is obtained from the resource file system using the path defined in the resource file. We use the form loader to load and construct the form:</db:para>
<db:programlisting language="cpp">    QFile file(&quot;:/forms/form.ui&quot;);
    file.open(QFile::ReadOnly);

    QWidget *widget = loader.load(&amp;amp;file);

    file.close();
    widget-&amp;gt;show();
</db:programlisting>
<db:para>Once the form has been loaded, the resource file can be closed and the widget is shown.</db:para>
<db:programlisting language="cpp">    return app.exec();
}
</db:programlisting>
<db:para>The form loader ensures that all the signal and slot connections between objects in the form are set up correctly when the form is loaded. As a result, the time is updated by the World Time Clock widget, and the time zone spin box can be used to change the position of the hour hand.</db:para>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qttools.git/tree/examples/designer/worldtimeclockbuilder?h=6.0">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
