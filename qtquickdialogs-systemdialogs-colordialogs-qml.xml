<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick System Dialog Examples</db:title>
<db:productname>QtQuickDialogs</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Dialogs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This example demonstrates the system dialog types in QML.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.2
import QtQuick.Controls 1.2
import QtQuick.Dialogs 1.1

Item {
    width: 320
    height: 240
    SystemPalette { id: palette }
    clip: true

    ColorDialog {
        id: colorDialog
        visible: colorDialogVisible.checked
        modality: colorDialogModal.checked ? Qt.WindowModal : Qt.NonModal
        title: &quot;Choose a color&quot;
        color: &quot;green&quot;
        showAlphaChannel: colorDialogAlpha.checked
        onAccepted: { console.log(&quot;Accepted: &quot; + color) }
        onRejected: { console.log(&quot;Rejected&quot;) }
    }

    Column {
        anchors.fill: parent
        anchors.margins: 12
        spacing: 8
        Label {
            font.bold: true
            text: &quot;Color dialog properties:&quot;
        }
        CheckBox {
            id: colorDialogModal
            text: &quot;Modal&quot;
            checked: true
            Binding on checked { value: colorDialog.modality != Qt.NonModal }
        }
        CheckBox {
            id: colorDialogAlpha
            text: &quot;Show alpha channel&quot;
            Binding on checked { value: colorDialog.showAlphaChannel }
        }
        CheckBox {
            id: colorDialogVisible
            text: &quot;Visible&quot;
            Binding on checked { value: colorDialog.visible }
        }
        Row {
            id: colorRow
            spacing: parent.spacing
            height: colorLabel.implicitHeight * 2.0
            Rectangle {
                color: colorDialog.color
                height: parent.height
                width: height * 2
                border.color: &quot;black&quot;
                MouseArea {
                    anchors.fill: parent
                    onClicked: colorDialog.open()
                }
            }
            Label {
                id: colorLabel
                text: &quot;&lt;b&gt;current color:&lt;/b&gt; &quot; + colorDialog.color
                anchors.verticalCenter: parent.verticalCenter
            }
        }
    }

    Rectangle {
        anchors {
            left: parent.left
            right: parent.right
            bottom: parent.bottom
        }
        height: buttonRow.height * 1.2
        color: Qt.darker(palette.window, 1.1)
        border.color: Qt.darker(palette.window, 1.3)
        Row {
            id: buttonRow
            spacing: 6
            anchors.verticalCenter: parent.verticalCenter
            anchors.left: parent.left
            anchors.leftMargin: 12
            height: implicitHeight
            width: parent.width
            Button {
                text: &quot;Open&quot;
                anchors.verticalCenter: parent.verticalCenter
                onClicked: colorDialog.open()
            }
            Button {
                text: &quot;Close&quot;
                anchors.verticalCenter: parent.verticalCenter
                onClicked: colorDialog.close()
            }
            Button {
                text: &quot;set to green&quot;
                anchors.verticalCenter: parent.verticalCenter
                onClicked: colorDialog.color = &quot;green&quot;
            }
        }
    }
}

</db:programlisting>
</db:article>
