<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHPieModelMapper Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhpiemodelmapper.xml">QHPieModelMapper</db:link> is a horizontal model mapper for pie series.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHPieModelMapper</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtcharts-hpiemodelmapper.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qpiemodelmapper.xml" xlink:role="class">QPieModelMapper</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Model mappers enable using a data model derived from the <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> class as a data source for a chart. A horizontal model mapper is used to create a connection between a data model and <db:link xlink:href="qpieseries.xml">QPieSeries</db:link>, so that each column in the data model defines a pie slice and each row maps to the label or the value of the pie slice.</db:para>
<db:para>Both model and pie series properties can be used to manipulate the data. The model mapper keeps the pie series and the data model in sync.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="columnCount-prop">
<db:title>columnCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>columnCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">columnCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setColumnCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">columnCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of columns of the model that are mapped as the data for the pie series.</db:para>
<db:para>The minimum and default value is -1 (number limited to the number of columns in the model).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">columnCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColumnCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>columnCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#columnCountChanged">columnCountChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="firstColumn-prop">
<db:title>firstColumn : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>firstColumn</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">firstColumn</db:synopsisinfo>
<db:synopsisinfo role="setter">setFirstColumn</db:synopsisinfo>
<db:synopsisinfo role="notifier">firstColumnChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the column of the model that contains the first slice value.</db:para>
<db:para>The minimum and default value is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">firstColumn</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstColumn</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstColumn</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#firstColumnChanged">firstColumnChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsRow-prop">
<db:title>labelsRow : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>labelsRow</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelsRow</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelsRow</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelsRowChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the row of the model that is kept in sync with the labels of the pie's slices.</db:para>
<db:para>The default value is -1 (invalid mapping).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#labelsRow">labelsRow</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#setLabelsRow">setLabelsRow</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>labelsRow</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#labelsRowChanged">labelsRowChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="model-prop">
<db:title>model : QAbstractItemModel*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QAbstractItemModel*</db:type>
<db:varname>model</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">model</db:synopsisinfo>
<db:synopsisinfo role="setter">setModel</db:synopsisinfo>
<db:synopsisinfo role="notifier">modelReplaced</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the model that is used by the mapper.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:type> *<db:emphasis role="bold">model</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setModel</db:emphasis>(<db:type><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:type> *<db:emphasis>model</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#modelReplaced">modelReplaced</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="series-prop">
<db:title>series : QPieSeries*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPieSeries*</db:type>
<db:varname>series</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">series</db:synopsisinfo>
<db:synopsisinfo role="setter">setSeries</db:synopsisinfo>
<db:synopsisinfo role="notifier">seriesReplaced</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the pie series that is used by the mapper.</db:para>
<db:para>All the data in the series is discarded when it is set to the mapper. When a new series is specified, the old series is disconnected (but it preserves its data).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpieseries.xml">QPieSeries</db:link></db:type> *<db:emphasis role="bold">series</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSeries</db:emphasis>(<db:type><db:link xlink:href="qpieseries.xml">QPieSeries</db:link></db:type> *<db:emphasis>series</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#seriesReplaced">seriesReplaced</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="valuesRow-prop">
<db:title>valuesRow : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>valuesRow</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">valuesRow</db:synopsisinfo>
<db:synopsisinfo role="setter">setValuesRow</db:synopsisinfo>
<db:synopsisinfo role="notifier">valuesRowChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the row of the model that is kept in sync with the values of the pie's slices.</db:para>
<db:para>The default value is -1 (invalid mapping).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#valuesRow">valuesRow</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#setValuesRow">setValuesRow</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>valuesRow</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qhpiemodelmapper.xml#valuesRowChanged">valuesRowChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHPieModelMapper">
<db:title>[explicit] QHPieModelMapper::QHPieModelMapper(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QHPieModelMapper</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QHPieModelMapper(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a mapper object that is a child of <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="columnCountChanged">
<db:title>void QHPieModelMapper::columnCountChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>columnCountChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">columnCount</db:synopsisinfo>
<db:synopsisinfo role="signature">void columnCountChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the number of columns changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#columnCount-prop">columnCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="firstColumnChanged">
<db:title>void QHPieModelMapper::firstColumnChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>firstColumnChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">firstColumn</db:synopsisinfo>
<db:synopsisinfo role="signature">void firstColumnChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the first column changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#firstColumn-prop">firstColumn</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsRow">
<db:title>int QHPieModelMapper::labelsRow() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>labelsRow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelsRow</db:synopsisinfo>
<db:synopsisinfo role="signature">int labelsRow() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the row of the model that is kept in sync with the labels of the pie's slices.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qhpiemodelmapper.xml#labelsRow-prop">labelsRow</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhpiemodelmapper.xml#setLabelsRow">setLabelsRow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelsRowChanged">
<db:title>void QHPieModelMapper::labelsRowChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelsRowChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelsRow</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelsRowChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the labels row changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#labelsRow-prop">labelsRow</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="modelReplaced">
<db:title>void QHPieModelMapper::modelReplaced()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>modelReplaced</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">model</db:synopsisinfo>
<db:synopsisinfo role="signature">void modelReplaced()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the model that the mapper is connected to changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#model-prop">model</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="seriesReplaced">
<db:title>void QHPieModelMapper::seriesReplaced()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>seriesReplaced</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">series</db:synopsisinfo>
<db:synopsisinfo role="signature">void seriesReplaced()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series that the mapper is connected to changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#series-prop">series</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="setLabelsRow">
<db:title>void QHPieModelMapper::setLabelsRow(int <db:emphasis>labelsRow</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setLabelsRow</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>labelsRow</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelsRow</db:synopsisinfo>
<db:synopsisinfo role="signature">void setLabelsRow(int labelsRow)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the model row that is kept in sync with the pie slices' labels to <db:code role="parameter">labelsRow</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qhpiemodelmapper.xml#labelsRow-prop">labelsRow</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhpiemodelmapper.xml#labelsRow">labelsRow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setValuesRow">
<db:title>void QHPieModelMapper::setValuesRow(int <db:emphasis>valuesRow</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setValuesRow</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>valuesRow</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">valuesRow</db:synopsisinfo>
<db:synopsisinfo role="signature">void setValuesRow(int valuesRow)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the model row that is kept in sync with the pie slices' values to <db:code role="parameter">valuesRow</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qhpiemodelmapper.xml#valuesRow-prop">valuesRow</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhpiemodelmapper.xml#valuesRow">valuesRow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valuesRow">
<db:title>int QHPieModelMapper::valuesRow() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>valuesRow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">valuesRow</db:synopsisinfo>
<db:synopsisinfo role="signature">int valuesRow() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the row of the model that is kept in sync with the values of the pie's slices.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qhpiemodelmapper.xml#valuesRow-prop">valuesRow</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhpiemodelmapper.xml#setValuesRow">setValuesRow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valuesRowChanged">
<db:title>void QHPieModelMapper::valuesRowChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>valuesRowChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">valuesRow</db:synopsisinfo>
<db:synopsisinfo role="signature">void valuesRowChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the values row changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qhpiemodelmapper.xml#valuesRow-prop">valuesRow</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
